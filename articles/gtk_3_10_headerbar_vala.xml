<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../xsl/article.xsl"?>
<!DOCTYPE article SYSTEM "http://ferruck.github.io/dtd/article.dtd">
<article prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
	<meta property="og:title" content="Die neue GTK 3.10 HeaderBar in Vala - Philipp Trommler - Blog"/>
	<meta property="og:description" content="Mit GNOME 3.10 haben die neuen HeaderBars Einzug gehalten, die Titelleiste und Toolbar eines Fenster vereinen und so, vor allem auf kleinen Displays, Platz sparen."/>
	<meta property="og:type" content="article"/>
	<meta property="article:published_time" content="2013-12-21T23:44:00+01"/>
	<meta property="article:author" content="philipp.trommler"/>
	<meta property="article:section" content="Technology"/>
	<meta property="article:tag" content="3.10"/>
	<meta property="article:tag" content="GTK"/>
	<meta property="article:tag" content="Vala"/>
	<meta property="article:publisher" content="philipp.trommler"/>
	<meta property="fb:admins" content="philipp.trommler"/>
	<meta property="fb:profile_id" content="philipp.trommler"/>
	<meta property="og:image" content="http://ferruck.github.io/images/articles/headerbar5.png"/>
	<meta property="og:url" content="http://ferruck.github.io/articles/gtk_3_10_headerbar_vala.xml"/>
	<meta property="og:locale" content="de_DE"/>
	<meta property="og:site_name" content="Philipp Trommler - Blog"/>
	<time datetime="2013-12-21T23:44:00+01">Sat, 21 Dec 2013 23:44 +0100</time>
	<link rel="canonical" href="http://ferruck.github.io/articles/gtk_3_10_headerbar_vala.xml"/>
	<author>Philipp Trommler<a href="https://plus.google.com/+PhilippTrommler" rel="author"/></author>
	<title>Die neue GTK 3.10 HeaderBar in Vala - Philipp Trommler - Blog</title>
	<text>
		<p>Mit GNOME 3.10 haben die neuen HeaderBars Einzug gehalten, die Titelleiste und Toolbar eines Fenster vereinen und so, vor allem auf kleinen Displays, Platz sparen.</p>
		<img src="../images/articles/headerbar5.png" alt="HeaderBar in Nautilus" height="518" width="879">
			<caption>Die HeaderBar in Nautilus spt Platz.</caption>
		</img>
		<p>Diese HeaderBars können auch einfach in die eigenen Programme integriert werden, wenn die aktuellen Bibliotheken, also <inlinecode>libgtk-3-0</inlinecode> und <inlinecode>libgtk-3-dev (>= 3.10)</inlinecode>, installiert sind. Das folgende Minimalbeispiel befolgt die aktuellen Empfehlungen zur Erstellung von GNOME-Apps, erweitert also die Gtk.Application Klasse. Eine HeaderBar besteht im Endeffekt aus drei Bereichen, dem linken und dem rechten, die jeweils mit Gtk.Widgets befüllt werden können, und dem mittleren, der entweder mit Titel und gegebenenfalls Untertitel oder mit einem Gtk.Widget belegt wird.</p>
		<h4>Minimalbeispiel</h4>
		<img src="../images/articles/headerbar1.png" alt="Minimalbeispiel für die GTK Headerbar" height="475" width="476">
			<caption>Minimalbeispiel für die GTK Headerbar.</caption>
		</img>
		<p>Dieses Minimalbeispiel kann schon mit wenigen Zeilen Code erstellt werden:</p>
		<code lang="vala"><![CDATA[class Example : Gtk.Application {
	public Example () {
		Object (application_id: "com.example.app", flags: ApplicationFlags.FLAGS_NONE);
	}
	
	protected override void activate () {
		Gtk.ApplicationWindow window = new Gtk.ApplicationWindow (this);
		window.set_default_size (500, 500);
		
		Gtk.HeaderBar headerBar = new Gtk.HeaderBar ();
		headerBar.set_title ("Titel");
		headerBar.set_subtitle ("Untertitel");
		
		
		window.set_titlebar (headerBar);
		window.show_all ();
	}
}

int main (string[] args) {
	return new Example ().run (args);
}]]></code>
		<p>Das ganze wird wie üblich als main.vala gespeichert und mit</p>
		<code lang="bash"><![CDATA[valac --pkg gtk+-3.0 -o example main.vala]]></code>
		<p>kompiliert. Interessant ist hier vor allem <inlinecode>window.set_titlebar (headerBar);</inlinecode>, das dem Fenster die erstellte HeaderBar als Titelzeile zuweist.</p>
		<h4>Die Erweiterung</h4>
		<p>Soll in der Titelleiste ein "Schließen"-Button angezeigt werden, reicht ein einfacher Befehl:</p>
		<code lang="vala"><![CDATA[headerBar.set_show_close_button (true);]]></code>
		<p>Der linke und der rechte Bereich der Titelleiste wird jetzt, wie bei einer <inlinecode>Gtk.Box</inlinecode>, mit <inlinecode>pack_end ()</inlinecode> und <inlinecode>pack_start ()</inlinecode> befüllt, soll also zum Beispiel ein "Öffnen"-Button hinzugefügt werden, reichen die beiden Zeilen:</p>
		<code lang="vala"><![CDATA[Gtk.Button openButton = new Gtk.Button.from_icon_name ("document-open", Gtk.IconSize.LARGE_TOOLBAR);
headerBar.pack_start (openButton);]]></code>
		<p>Hierbei wird schon der neue <inlinecode>Gtk.Button.from_icon_name</inlinecode>-Constructor genutzt, da <inlinecode>Gtk.Stock</inlinecode> ab GTK 3.10 als veraltet markiert ist. Die Iconnamen sind dabei standardisiert und nicht mehr GTK-intern, mehr dazu allerdings in einem anderen Blogpost.</p>
		<img src="../images/articles/headerbar4.png" alt="Erweitertes Minimalbeispiel" height="475" width="476">
			<caption>Erweitertes Minimalbeispiel mit "öffnen"- und "Schließen"-Buttons.</caption>
		</img>
		<h4>Widgets in der Titelleiste</h4>
		<p>Soll der mittlere Bereich nun, statt mit Titel und Untertitel, mit einem <inlinecode>Gtk.Widget</inlinecode> befüllt werden, so geschieht dies mit <inlinecode>headerBar.set_custom_title ()</inlinecode>. Sinnvoll ist das für zentrale Steuerungsobjekte, zum Beispiel ein Suchfeld wie bei der neuen GNOME Karten-App, oder für einen Ansichtswechsel. Mit den folgenden Befehlen lässt sich also ein Suchfeld erstellen:</p>
		<code lang="vala"><![CDATA[Gtk.Entry entry = new Gtk.Entry ();
entry.set_icon_from_icon_name (Gtk.EntryIconPosition.PRIMARY, "system-search");
headerBar.set_custom_title (entry);]]></code>
		<img src="../images/articles/headerbar3.png" alt="Erweitertes Minimalbeispiel mit Widget" height="475" width="476">
			<caption>Erweitertes Minimalbeispiel mit Widget in der Titelleiste.</caption>
		</img>
		<p>Auch hier kommen wieder die neuen Iconnamen zum Einsatz. Der Titel und der Untertitel werden durch das <inlinecode>Gtk.Widget</inlinecode> überschrieben, sollen sie wieder angezeigt werden muss der "<inlinecode>custom_title</inlinecode>" null gesetzt werden: </p>
		<code lang="vala"><![CDATA[headerBar.set_custom_title (null);]]></code>
		<p>Einfach, oder? Hier noch einmal der Quelltext des kompletten Minimalbeispiels:</p>
		<code lang="vala"><![CDATA[class Example : Gtk.Application {
	public Example () {
		Object (application_id: "com.example.app", flags: ApplicationFlags.FLAGS_NONE);
	}

	protected override void activate () {
		Gtk.ApplicationWindow window = new Gtk.ApplicationWindow (this);
		window.set_default_size (500, 500);
	
		Gtk.HeaderBar headerBar = new Gtk.HeaderBar ();
		headerBar.set_show_close_button (true);
	
		Gtk.Entry entry = new Gtk.Entry ();
		entry.set_icon_from_icon_name (Gtk.EntryIconPosition.PRIMARY, "system-search");
		headerBar.set_custom_title (entry);
	
		Gtk.Button openButton = new Gtk.Button.from_icon_name ("document-open", Gtk.IconSize.LARGE_TOOLBAR);
		headerBar.pack_start (openButton);
	
		Gtk.Button closeButton = new Gtk.Button.from_icon_name ("document-save-as", Gtk.IconSize.LARGE_TOOLBAR);
		headerBar.pack_end (closeButton);
	
		window.set_titlebar (headerBar);
		window.show_all ();
	}
}

int main (string[] args) {
	return new Example ().run (args);
}]]></code>
	</text>
</article>
