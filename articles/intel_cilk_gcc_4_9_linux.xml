<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../xsl/article.xsl"?>
<!DOCTYPE article SYSTEM "http://philipp.feige-trommler.de/dtd/article.dtd">
<article itemscope="" itemtype="http://schema.org/BlogPosting" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
	<meta property="og:title" content="Intel® Cilk™ mit GCC 4.9 unter Linux - Philipp Trommler - Blog"/>
	<meta itemprop="description" property="og:description" content="Mit der aktuellen (beziehungsweise in Ubuntu kommenden) Version 4.9 der GNU Compiler Collection GCC hält auch Intels® Multithreading Werkzeug Cilk™ Einzug in den C- und C++-Compiler."/>
	<meta property="og:type" content="article"/>
	<meta itemprop="datePublished" property="article:published_time" content="2014-07-01T09:05:13+02"/>
	<meta itemprop="dateModified" property="article:modified_time" content="2014-07-03T13:19:34+02"/>
	<meta property="article:author" content="philipp.trommler"/>
	<meta property="article:section" content="Technology"/>
	<meta property="article:tag" content="Intel"/>
	<meta property="article:tag" content="Cilk"/>
	<meta property="article:tag" content="GCC"/>
	<meta property="article:tag" content="Linux"/>
	<meta property="article:tag" content="C++"/>
	<meta property="article:tag" content="CPP"/>
	<meta property="article:tag" content="Multithreading"/>
	<meta property="article:publisher" content="philipp.trommler"/>
	<meta property="fb:admins" content="philipp.trommler"/>
	<meta property="fb:profile_id" content="philipp.trommler"/>
	<meta itemprop="url" property="og:url" content="http://philipp.feige-trommler.de/articles/intel_cilk_gcc_4_9_linux.xml"/>
	<meta itemprop="inLanguage" property="og:locale" content="de_DE"/>
	<meta property="og:site_name" content="Philipp Trommler - Blog"/>
	<time datetime="2014-04-24T21:05:00+02">Tue, 01 Jul 2014 09:05 +0200</time>
	<link rel="alternate" type="application/rss+xml" title="RSS" href="http://philipp.feige-trommler.de/rss.xml"/> 
	<link rel="apple-touch-icon" sizes="57x57" href="images/apple-touch-icon-57x57.png"/>
	<link rel="apple-touch-icon" sizes="72x72" href="images/apple-touch-icon-72x72.png"/>
	<link rel="apple-touch-icon" sizes="76x76" href="images/apple-touch-icon-76x76.png"/>
	<link rel="apple-touch-icon" sizes="114x114" href="images/apple-touch-icon-114x114.png"/>
	<link rel="apple-touch-icon" sizes="144x144" href="images/apple-touch-icon-144x144.png"/>  
	<link rel="apple-touch-icon" sizes="152x152" href="images/apple-touch-icon-152x152.png"/>  
	<link rel="apple-touch-icon-precomposed" href="http://philipp.feige-trommler.de/images/apple-touch-icon-152x152.png"/>
	<link rel="icon" type="image/png" href="images/ico32.png"/>
	<link rel="shortcut icon" type="image/x-icon" href="images/favicon.ico"/>
	<!--[if IE]><link rel="shortcut icon" type="image/vnd.microsoft.icon" href="images/favicon.ico"/><![endif]-->
	<meta name="application-name" content=" "/>
	<meta name="msapplication-TileColor" content="#cddc39"/>
	<meta name="msapplication-square70x70logo" content="images/tiny.png"/>
	<meta name="msapplication-square150x150logo" content="images/square.png"/>
	<meta name="msapplication-wide310x150logo" content="images/wide.png"/>
	<meta name="msapplication-square310x310logo" content="images/large.png"/>
	<meta name="msapplication-notification" content="frequency=30;polling-uri=http://notifications.buildmypinnedsite.com/?feed=http://philipp.feige-trommler.de/rss.xml&amp;id=1;polling-uri2=http://notifications.buildmypinnedsite.com/?feed=http://philipp.feige-trommler.de/rss.xml&amp;id=2;polling-uri3=http://notifications.buildmypinnedsite.com/?feed=http://philipp.feige-trommler.de/rss.xml&amp;id=3;polling-uri4=http://notifications.buildmypinnedsite.com/?feed=http://philipp.feige-trommler.de/rss.xml&amp;id=4;polling-uri5=http://notifications.buildmypinnedsite.com/?feed=http://philipp.feige-trommler.de/rss.xml&amp;id=5; cycle=1"/>
	<link rel="canonical" href="http://philipp.feige-trommler.de/articles/intel_cilk_gcc_4_9_linux.xml"/>
	<author>Philipp Trommler<a href="https://plus.google.com/+PhilippTrommler" rel="author"/></author>
	<title>Intel® Cilk™ mit GCC 4.9 unter Linux - Philipp Trommler - Blog</title>
	<h3 itemprop="headline">Intel® Cilk™ mit GCC 4.9 unter Linux</h3>
	<text itemprop="articleBody">
		<p>Mit der aktuellen (beziehungsweise in Ubuntu kommenden) Version 4.9 der GNU Compiler Collection GCC hält auch Intels® Multithreading Werkzeug Cilk™ Einzug in den C- und C++-Compiler. Mit Cilk™ soll es (unter anderem) äußerst einfach sein, die Last von Programmen gleichmäßig auf alle verfügbare Prozessorkerne zu verteilen.</p>
		<h4>Vorbereitungen</h4>
		<p>Um Cilk™ mit Ubuntu nutzen zu können, bedarf es Vorbereitung, da es, wie der Titel es schon vermuten lässt, erst ab Version 4.9 in den Compilern enthalten ist. Diese Version wird wohl aber erst unter Ubuntu 14.10 zum Standard werden, also muss GCC auf eine der folgenden Weisen aktualisiert werden:</p>
		<ol>
			<li>Aus den Quellen kompilieren, wobei ich hierauf nicht weiter eingehen möchte, da der Aufwand nur zum Testen von Cilk™ zu hoch und unnötig und die Vorgehensweise ausreichend im Internet dargelegt ist.</li>
			<li>Über das Ubuntu Toolchain PPA installieren.</li>
		</ol>
		<p>Das PPA kann mittels <inlinecode>sudo add-apt-repository ppa:ubuntu-toolchain-r/test</inlinecode> ins System eingepflegt werden, anschließend werden mit dem Befehl <inlinecode>sudo apt-get install gcc-4.9 g++-4.9</inlinecode> die Compiler installiert. In den deb-Paketen scheint allerdings noch eine Datei zu fehlen, die somit manuell angelegt werden muss, also mit <inlinecode>sudo nano /usr/lib/libcilkrts.spec</inlinecode> die Datei öffnen und folgendes einfügen:</p>
		<code><![CDATA[# This spec file is read by gcc when linking.  It is used to specify the
# standard libraries we need in order to link with libcilkrts.
*link_cilkrts: /usr/lib/gcc/i686-linux-gnu/4.9/libcilkrts.so]]></code>
		<p>Der Pfad zur Shared Library muss auf 64-bit Systemen entsprechend angepasst werden. Damit sollte die Installation eigentlich abgeschlossen sein (einfacher als GCC selbst zu kompilieren, oder?).</p>
		<h4>Tests</h4>
		<p>Um die Performance von Cilk™ unter Linux zu messen, bediene ich mich der Beispiele, die Intel® <a href="http://www.cilkplus.org/cilk-plus-tutorial" target="_blank">auf den entsprechenden Webseiten</a> angibt. Als erstes das Fibonacci-Beispiel, mit dem sich <inlinecode>cilk_spawn</inlinecode> und <inlinecode>cilk_sync</inlinecode> für rekursive Algorithmen testen lässt:</p>
		<code lang="cpp"><![CDATA[#include <iostream>
#include <cilk/cilk.h>
#include <cilk/cilk_api.h>
#include <sstream>

int fibo_wo (int n)
{
	if (n < 2)
		return n;

	int x = fibo_wo (n-1);
	int y = fibo_wo (n-2);

	return x + y;
}

int fibo_w (int n)
{
	if (n < 2)
		return n;

	// Spawn one recursion as a new thread
	int x = cilk_spawn fibo_w (n-1);
	int y = fibo_w (n-2);

	// Wait for all spawned threads to finish
	cilk_sync;

	return x + y;
}

int main (int argc, const char* argv[])
{
	// Thanks to Thomas for char to int conversion (<http://stackoverflow.com/questions/2797813/convert-c-argument-to-int>)
	std::istringstream ss(argv[1]);
	int x;
	if (!(ss >> x))
	{
		std::cerr << "Invalid number " << argv[1] << '\n';
	}
	
	std::cout << "Testing Intel (R) Cilk (TM) with Fibonacci (n = " << argv[1] << ")" << std::endl;
	clock_t start, end;
	start = clock ();
	std::cout << fibo_wo (x) << std::endl;
	end = clock ();
	std::cout << "Time without Intel (R) Cilk (TM): " << (end - start) / CLOCKS_PER_SEC << " sec (CLOCKS_PER_SEC: " << CLOCKS_PER_SEC << ")" << std::endl;
	start = clock ();
	std::cout << fibo_w (x) << std::endl;
	end = clock ();
	std::cout << "Time with Intel (R) Cilk (TM): " << (end - start) / CLOCKS_PER_SEC << " sec (CLOCKS_PER_SEC: " << CLOCKS_PER_SEC << ")" << std::endl;
	
	return 0;
}]]></code>
		<p>Ich habe das Beispiel etwas angepasst, damit sich leichter vergleichbare Ergebnisse erzielen lassen. Die Datei einfach als <inlinecode>fibo.cpp</inlinecode> speichern und mit</p>
		<code lang="bash"><![CDATA[g++-4.9 -fcilkplus -I/usr/include/c++/4.9/ -o fibo fibo.cpp]]></code>
		<p>kompilieren. Ein Aufruf mit <inlinecode>./fibo 40</inlinecode> gibt bei mir folgende, interessante Ergebnisse:</p>
		<code lang="bash"><![CDATA[Testing Intel (R) Cilk (TM) with Fibonacci (n = 40)
102334155
Time without Intel (R) Cilk (TM): 3 sec (CLOCKS_PER_SEC: 1000000)
102334155
Time with Intel (R) Cilk (TM): 35 sec (CLOCKS_PER_SEC: 1000000)]]></code>
		<p>Mal abgesehen davon, dass beide Funktionen das gleiche Ergebnis liefern (Glück gehabt!) und mein Computer echt langsam ist, fällt vor allem auf, dass die Version mit Intel® Cilk™ mehr als die zehnfache Laufzeit hat. Ob das an Problemen zwischen meinem betagten Prozessor (Genuine Intel® CPU T2250 @ 1.73GHz × 2) und der doch recht neuen Implementierung von Cilk™ liegt oder daran, dass der Compiler die 'normale' Funktion einfach so stark optimiert (die Option <inlinecode>-O0</inlinecode> bringt keine Veränderung), kann ich nicht sagen. Allerdings scheint die Cilk™ Funktion tatsächlich nicht (so stark) optimiert zu werden, da nach der Kompilierung mit <inlinecode>-O3</inlinecode> folgendes Ergebnis erscheint:</p>
		<code lang="bash"><![CDATA[Testing Intel (R) Cilk (TM) with Fibonacci (n = 40)
102334155
Time without Intel (R) Cilk (TM): 1 sec (CLOCKS_PER_SEC: 1000000)
102334155
Time with Intel (R) Cilk (TM): 34 sec (CLOCKS_PER_SEC: 1000000)]]></code>
		<p>Das Ergebnis der Cilk™ Funktion ändert sich also nicht, das der normalen wird um zwei Drittel reduziert. Vielleicht bringt die neue <inlinecode>for</inlinecode>-Schleife etwas, allerdings hat es <inlinecode>cilk_for</inlinecode> noch nicht in die GCC geschafft, vielleicht in 4.10.</p>
		<p>Bis dahin: Wie sehen eure Ergebnisse mit Cilk™ aus? Übersehe ich nur etwas? Liegt es vielleicht an meinem alten Rechner und wie verhält es sich mit AMD Prozessoren? Schreibt einfach in die Kommentare!</p>
		<h4>AMD Quad Core (Update)</h4>
		<p>Ich habe gerade zum Vergleich das Programm auf meinem zweiten Rechner (AMD Athlon™ II X4 645 Processor × 4) kompiliert und ausgeführt, leider auch hier ähnliche Ergebnisse:</p>
		<code lang="bash"><![CDATA[$ > ./fibo 40
Testing Intel (R) Cilk (TM) with Fibonacci (n = 40)
102334155
Time without Intel (R) Cilk (TM): 1 sec (CLOCKS_PER_SEC: 1000000)
102334155
Time with Intel (R) Cilk (TM): 12 sec (CLOCKS_PER_SEC: 1000000)
$ > ./fibo 45
Testing Intel (R) Cilk (TM) with Fibonacci (n = 45)
1134903170
Time without Intel (R) Cilk (TM): 12 sec (CLOCKS_PER_SEC: 1000000)
1134903170
Time with Intel (R) Cilk (TM): 134 sec (CLOCKS_PER_SEC: 1000000)
]]></code>
		<p>Es scheint mir langsam wirklich so, als würde ich etwas übersehen, habt ihr Ideen?</p>
	</text>
</article>
